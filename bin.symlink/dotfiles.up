#!/usr/bin/env sh

# Store the current directory and switch to the project root.
DIR=$(pwd)
cd "$(dirname "$(greadlink -f "$0")")/.."

STASH_COUNT=`git stash list | wc -l`

function unstash() {
  if [ $STASH_COUNT != `git stash list | wc -l` ]; then
    git stash pop --quiet
  fi
}

trap ctrl_c SIGINT SIGTERM
function ctrl_c() {
  unstash
  echo "*** Returning you to $DIR"
  cd "$DIR"
  exit 0
}

# If there are changes, stash them.
git stash --quiet

git pull origin master

# Update homebrew.
if [ `which brew` ]; then
  brew update && brew upgrade && brew linkapps && brew cleanup
fi

# Next, update all git submodules.
git submodule foreach git pull

# Update zgen projects.
zsh -c "source \"$HOME/.zsh/config.zsh\" && zgen selfupdate && zgen update"

# Update vim plugins
vim +PlugUpgrade +PlugUpdate +qall

# Update composer projects
if [ `which composer` ] && [ -f ~/.composer/composer.json ] && [ `jq '.require|length' < ~/.composer/composer.json` -gt 0 ]; then
  cd composer.symlink && composer --dev update && cd - > /dev/null;
else
  echo "Composer: no packages defined, skipping."
fi

# Finally, commit the results.
git status --porcelain | grep '^ M' | awk '{print $2}' | xargs git add
if [ -n "$(git status --porcelain | grep '^M')" ]; then
  git ci -m "Updating submodules, vim plugins, composer packages, and/or brew list."
  git push origin master
else
  echo "Nothing updated, no push needed."
fi

# Unstash if necessary.
unstash

cd "$DIR"
exit 0

#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

# Store the current directory and switch to the project root.
dir=$(pwd)
cd "$(dirname "$(greadlink -f "$0")")/../.." || exit 1

STASH_COUNT=$(git stash list | wc -l)

trap cleanup INT TERM EXIT
cleanup() {
  if [ "$STASH_COUNT" != "$(git stash list | wc -l)" ]; then
    git stash pop --quiet
  fi
  if [ "$(pwd)" != "$dir" ]; then
    echo "*** Returning you to $dir"
    cd "$dir" || exit 1
  fi
  exit 0
}

commit_if_changed() {
  msg=${1:-"Updating submodules, vim plugins, and/or brew list."}
  set +e
  git status --porcelain | grep '^ M' | awk '{print $2}' | xargs git add
  if git status --porcelain | grep --silent '^M'; then
    git ci -m "$msg"
  fi
  set -e
}

# If there are changes, stash them.
git stash --quiet

git pull origin master

# Apps from the App Store.
if command -v mas > /dev/null; then
  mas upgrade
fi

# homebrew and casks.
if command -v brew > /dev/null; then
  brew update
  brew upgrade
  brew cask outdated | awk '{print $1}' | xargs brew cask reinstall
  brew cleanup
  brew bundle --global --force --no-restart dump
  "$BREWPATH/opt/fzf/install" --no-bash --no-fish --all
  commit_if_changed "brew: Updating brews"
fi

# git submodules.
git submodule foreach git pull
commit_if_changed "Updating git submodules"

# zsh plugins.
zsh -c "source \"$ZPLUG_HOME/init.zsh\" && source \"$HOME/.zsh/zplug.zsh\" && zplug update"
commit_if_changed "zsh: Updating plugins"

# vim plugins
vim +PackUpdate +qall
commit_if_changed "vim: Updating plugins"

# asdf plugins
asdf plugin-update --all
commit_if_changed "asdf: Updating plugins"

# Finally, push to remote if we need to.
if [ "$(git rev-parse '@{u}')" != "$(git rev-parse @)" ]; then
  git push origin master
else
  echo "Nothing updated, no push needed."
fi

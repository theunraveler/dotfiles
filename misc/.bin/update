#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

# Process options.
ASDF=1
BREW=1
COMMIT=1
GIT_MODULES=1
MAS=1
PUSH=1
VIM=1
while test $# -gt 0; do
  case "$1" in
    -h|--help)
      echo "update"
      echo " "
      echo "options:"
      echo "-h, --help                show brief help"
      echo "-c, --no-commit           don't commit changes (implies --no-push)"
      echo "-p, --no-push             don't push commits"
      exit 0
      ;;
    -c|--no-commit)
      export COMMIT=0
      export PUSH=0
      shift
      ;;
    -p|--no-push)
      export PUSH=0
      shift
      ;;
    --no-asdf)
      export ASDF=0
      shift
      ;;
    --no-brew)
      export BREW=0
      shift
      ;;
    --no-git-submodules)
      export GIT_MODULES=0
      shift
      ;;
    --no-mas)
      export MAS=0
      shift
      ;;
    --no-vim)
      export VIM=0
      shift
      ;;
    *)
      break
      ;;
  esac
done

# Store the current directory and switch to the project root.
dir=$(pwd)
cd "$(dirname "$(greadlink -f "$0")")/../.." || exit 1

STASH_COUNT=$(git stash list | wc -l)

trap cleanup INT TERM EXIT
cleanup() {
  if [ "$STASH_COUNT" != "$(git stash list | wc -l)" ]; then
    git stash pop --quiet
  fi
  if [ "$(pwd)" != "$dir" ]; then
    echo "*** Returning you to $dir from $(pwd)"
    cd "$dir" || exit 1
  fi
  exit 0
}

commit_if_changed() {
  if [ $COMMIT -eq 0 ]; then return; fi
  if [ "$(git status --porcelain | wc -l)" -eq 0 ]; then return; fi
  git add .
  msg=${1:-"Updating submodules, vim plugins, and/or brew list."}
  git ci -m "$msg"
}

# If there are changes, stash them.
git stash --quiet

git pull origin main

# Apps from the App Store.
if [ $MAS -eq 1 ] && command -v mas > /dev/null; then
  mas upgrade
fi

# homebrew and casks.
if [ $BREW -eq 1 ] && command -v brew > /dev/null; then
  brew update
  HOMEBREW_NO_INSTALL_CLEANUP=1 brew upgrade --ignore-pinned --greedy
  HOMEBREW_NO_INSTALL_CLEANUP=1 brew cleanup
  HOMEBREW_NO_INSTALL_CLEANUP=1 brew bundle --file="$(pwd)/Brewfile" --force --no-restart dump
  "$HOMEBREW_PREFIX/opt/fzf/install" --no-bash --no-zsh --all
  commit_if_changed "brew: Updating brews"
fi

# vim plugins
if [ $VIM -eq 1 ]; then
  mvim -f -c "call PackagerInit() | call packager#update({'on_finish': ':w! >>/dev/tty | quitall'})"
  commit_if_changed "vim: Updating plugins"
fi

# git submodules
if [ $GIT_MODULES -eq 1 ]; then
  git submodule foreach git pull
  commit_if_changed "git: Updating submodules"
fi

# Update bat cache
bat cache --build

# asdf plugins
if [ $ASDF -eq 1 ]; then
  asdf plugin update --all
  commit_if_changed "asdf: Updating plugins"
fi

# Finally, push to remote if we need to.
if [ $PUSH -eq 0 ]; then
  echo "Skipping git push"
elif [ "$(git rev-parse '@{u}')" != "$(git rev-parse @)" ]; then
  git push origin main
else
  echo "Nothing updated, no push needed."
fi
